#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;

void main() {
    
    vec2 st = gl_FragCoord.xy/u_resolution*8.-4.;
    
    float mode = mod(u_time,1.0);
    float ret;
    if(st.x <0.0 ){
    /*
    left side
    old code
    */
    st.x+=2.;
    ret = mix(float( dot(st,st) < 1.0 ), // ellipse
              float( abs(st.x) < 1.0 && abs(st.y) < 1.0), // rect
               mode);
    }
    else{
    st.x-=2.;
    /*
    right side
    new code
    should work the same for mode 0.0, 1.0 
    and does in this example, but doesnt in full code, thonk
    ... turns out it works the same, just with some exceptions
    "solved" it by changing the input
    */
    st*=st;
    st*=step(mode,st);
    ret = 1.-step(1.,st.x+st.y);
    }


    gl_FragColor = vec4(vec3(ret),1.0);
}




// will not be used in the font but saving here for now
// rounder corner rect test

#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;


float  roundcorner(vec2 st,float mode){
    float l = 1.-mode;
    
    st = abs(st);
    st *= step(mode,st);
    
    float corner,cross;
    vec2 cr = abs(st-sign(st)*mode);

    corner = 1.-dot(cr,cr)/(l*l);
    // corner = 1.-(cr.x+cr.y)/l; chopped corner (octagon)
    
    cross = 1.-(st.x+st.y);
    
    return max(corner,cross);
}

void main() {
    
    vec2 st = gl_FragCoord.xy/u_resolution*8.-4.;
    
    float mode = abs(mod(u_time*.5,2.0)-1.);
    
    gl_FragColor = vec4(vec3( step(0.0, roundcorner(st,mode)) ),1.0);
}
